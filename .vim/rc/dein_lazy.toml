# only with specific commands

[[plugins]]
repo = 'wsdjeg/dein-ui.vim'
on_cmd = ["DeinUpdate"]

# only in insert mode

[[plugins]]
repo = 'cohama/lexima.vim'
on_i = 1
hook_post_source = """
call lexima#add_rule({'at': '\%#[-0-9a-zA-Z_]', 'char': '{', 'input': '{'})
call lexima#add_rule({'at': '\%#\\', 'char': '{', 'input': '{', 'filetype': ['latex', 'tex']})
call lexima#add_rule({'char': '$', 'input_after': '$', 'filetype': ['latex', 'tex']})
call lexima#add_rule({'char': '$', 'at': '\%#\$', 'leave': 1, 'filetype': ['latex', 'tex']})
call lexima#add_rule({'char': '<BS>', 'at': '\$\%#\$', 'delete': 1, 'filetype': ['latex', 'tex']})
call lexima#add_rule({'char': '\{', 'input_after': '\}', 'filetype': ['latex', 'tex']})
call lexima#add_rule({'char': '}', 'at': '\\\%#}', 'leave': 1, 'filetype': ['latex', 'tex']})
call lexima#add_rule({'char': '<BS>', 'at': '\\\{\%#\\\}', 'input': '<BS><BS><DEL><DEL>', 'filetype': ['latex', 'tex']})
call lexima#add_rule({'char': "'", 'input':  "'", 'filetype': ['latex', 'tex']})
call lexima#add_rule({'input_after': '>', 'char': '<', 'filetype': ['satysfi']})
call lexima#add_rule({'char': '<', 'at': '\\\%#', 'filetype': ['satysfi']})
call lexima#add_rule({'char': '>', 'leave': 1, 'at': '\%#>', 'filetype': ['satysfi']})
call lexima#add_rule({'char': '<BS>', 'at': '<\%#>', 'delete': 1, 'filetype': ['satysfi']})
call lexima#add_rule({'char': '``', 'input_after': '``', 'filetype': ['rst']})
"""

[[plugins]]
repo = 'Shougo/neosnippet.vim'
on_i = 1
depends = ['neosnippet-snippets']
hook_post_source = """
imap <C-s> <Plug>(neosnippet_expand_or_jump)
smap <C-s> <Plug>(neosnippet_expand_or_jump)
xmap <C-s> <Plug>(neosnippet_expand_target)
let g:neosnippet#snippets_directory='~/.vim/snippets'
"""

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
on_i = 1


# only in python

# [[plugins]]
# repo = 'w0rp/ale'
# on_ft = ['python']
# hook_source = """
# let g:ale_set_loclist = 0
# let g:ale_set_quickfix = 1
# let g:ale_sign_column_always = 1
# let g:ale_linters = {
#   \ 'python': ['pyls', 'mypy'],
#   \ 'tex': [],
#   \ 'plaintex': [],
#   \ }
# let g:ale_python_mypy_options = '--ignore-missing-imports'
# nmap <silent> <Space>j <Plug>(ale_previous_wrap)
# nmap <silent> <Space>k <Plug>(ale_next_wrap)
# """

# [[plugins]]
# repo = 'davidhalter/jedi-vim'
# on_ft = ['python']
# hook_post_source = """
# " autocmd FileType python setlocal omnifunc=jedi#completions
# let g:jedi#popup_on_dot = 0
# let g:jedi#popup_select_first = 0
# " 補完は deoplete-jedi に任せる
# let g:jedi#completions_enabled = 0
# autocmd FileType python setlocal completeopt-=preview
# """

[[plugins]]
repo = 'Vimjas/vim-python-pep8-indent'
on_ft = ['python']


# only in LaTeX or TeX

[[plugins]]
repo = 'lervag/vimtex'
on_ft = ['tex', 'latex', 'plaintex']
hook_post_source = """
let g:vimtex_compiler_latexmk = {'callback' : 0}
" let g:vimtex_imaps_list = []
let g:tex_flavor = "latex"
" let g:vimtex_fold_manual = 1
let g:vimtex_fold_enabled = 1
let g:vimtex_indent_ignored_envs = ['document', 'frame']
"""

[[plugins]]
repo = 'bps/vim-textobj-python'
# depends = ['kana/vim-textobj-user']
on_ft = ['python']

# only in ReST

[[plugins]]
repo = 'Rykka/riv.vim'
on_ft = ['rst', 'restructuredtext']
hook_source = """
let g:riv_fold_level = 1
let g:riv_fold_info_pos = 'left'
let g:riv_ignored_imaps = "<Tab>"
let g:riv_ignored_nmaps = ">,<"
let g:riv_ignored_maps = "<CR>,<S-CR>"
"""


# [[plugins]]
# repo = 'autozimu/LanguageClient-neovim'
# rev = 'next'
# on_ft = ['java']
# # on_ft = ['python', 'py', 'java']
# build = 'bash install.sh'
# hook_add = '''
# source ~/.config/nvim/plugins/languageclient-neovim.rc.vim
# '''

# only in Julia

# [[plugins]]
# repo = 'JuliaEditorSupport/julia-vim'


# only in dein.vim config file (this file or others)
# [[plugins]]
# repo = 'osyo-manga/vim-precious'
# depends = ['Shougo/context_filetype.vim']
# on_ft = ['conf']
# 
# [[plugins]]
# repo = 'Shougo/context_filetype.vim'
# on_ft = ['conf']
