# [[plugins]]
# repo = 'Shougo/deoplete.nvim'
# on_i = 1
# hook_source = """
# let g:deoplete#enable_at_startup = 1
# let g:deoplete#auto_complete_delay = 0
# let g:deoplete#auto_complete_start_length = 1
# let g:deoplete#enable_camel_case = 0
# let g:deoplete#enable_ignore_case = 0
# let g:deoplete#enable_refresh_always = 0
# let g:deoplete#enable_smart_case = 1
# let g:deoplete#file#enable_buffer_path = 1
# let g:deoplete#max_list = 100
# imap <expr><tab> 
# \ neosnippet#expandable() ? "\<Plug>(neosnippet_expand_or_jump)" :
# \ pumvisible() ? "\<C-n>" : 
# \ neosnippet#jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" :
# \ "\<tab>"
# " func! Multiple_cursors_before()
# "   call deoplete#init#_disable()
# " endfunc
# " func! Multiple_cursors_after()
# "   call deoplete#init#_enable()
# " endfunc
# let g:vimtex_re_deoplete_mgm = '\\\\(?:'
#       \ .  '\w*cite\w*(?:\s*\[[^]]*\]){0,2}\s*{[^}]*'
#       " \ . '|(text|block)cquote\*?(?:\s*\[[^]]*\]){0,2}\s*{[^}]*'
#       " \ . '|(for|hy)\w*cquote\*?{[^}]*}(?:\s*\[[^]]*\]){0,2}\s*{[^}]*'
#       \ . '|\w*ref(?:\s*\{[^}]*|range\s*\{[^,}]*(?:}{)?)'
#       " \ . '|hyperref\s*\[[^]]*'
#       " \ . '|includegraphics\*?(?:\s*\[[^]]*\]){0,2}\s*\{[^}]*'
#       " \ . '|(?:include(?:only)?|input|subfile)\s*\{[^}]*'
#       " \ . '|\w*(gls|Gls|GLS)(pl)?\w*(\s*\[[^]]*\]){0,2}\s*\{[^}]*'
#       " \ . '|includepdf(\s*\[[^]]*\])?\s*\{[^}]*'
#       " \ . '|includestandalone(\s*\[[^]]*\])?\s*\{[^}]*'
#       " \ . '|(usepackage|RequirePackage|PassOptionsToPackage)(\s*\[[^]]*\])?\s*\{[^}]*'
#       " \ . '|documentclass(\s*\[[^]]*\])?\s*\{[^}]*'
#       " \ . '|begin(\s*\[[^]]*\])?\s*\{[^}]*'
#       " \ . '|end(\s*\[[^]]*\])?\s*\{[^}]*'
#       " \ . '|\w*'
#       \ .')'
# call deoplete#custom#var('omni', 'input_patterns', {
#         \ 'tex': g:vimtex_re_deoplete_mgm
#         \})
# " inoremap <silent> <CR> <C-r>=<SID>my_cr_function()<CR>
# " function! s:my_cr_function()
# "   return deoplete#mappings#smart_close_popup() . "\<CR>"
# " endfunction
# inoremap <expr> <CR> (pumvisible() ? "\<c-y>" : "\<CR>\<c-g>u")
# """
# hook_post_source = """
# 		call deoplete#custom#var('around', {
# 		\   'range_above': 15,
# 		\   'range_below': 15,
# 		\   'mark_above': '[↑]',
# 		\   'mark_below': '[↓]',
# 		\   'mark_changes': '[*]',
# 		\})
# """
# 
# [[plugins]]
# repo = 'deoplete-plugins/deoplete-jedi'
# on_i = 1
# hook_add = """
# let g:deoplete#sources#jedi#enable_typeinfo=1
# let g:deoplete#sources#jedi#server_timeout=100
# let g:deoplete#sources#jedi#statement_length=100
# """


